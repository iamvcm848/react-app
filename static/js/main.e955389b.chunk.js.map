{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","day","date","toLocaleString","month","year","getFullYear","ExpenseItem","eprice","amount","title","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e955389b.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props){\r\n    const classes='card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  \r\n  const dropdownChangeHandler = (event) =>{\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","\r\nimport './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n\r\n\r\n    const day=props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const month=props.date.toLocaleString('en-US',{month:'long'});\r\n    const year=props.date.getFullYear();\r\n    \r\n\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n    \r\n    const eprice=props.amount;\r\n    return (\r\n     <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\"> {eprice} </div>\r\n        </div>\r\n       \r\n        </Card>\r\n        );\r\n}\r\n\r\n\r\n\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = props => {\r\n    \r\n\r\n    if(props.items.length===0){\r\n        return <h2 className=\"expenses-list__fallback\">Found No Expenses !!!</h2>\r\n    }\r\n\r\n    return <ul className=\"expenses-list\">\r\n        {\r\n            props.items.map((expense)=>(\r\n                <ExpenseItem \r\n                key={expense.id}\r\n                title={expense.title} \r\n                amount={expense.amount} \r\n                date={expense.date}>\r\n                </ExpenseItem>\r\n            )) }\r\n    </ul>\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = props =>{\r\n\r\n    let barFillHeight='0%';\r\n    if(props.maxValue>0){\r\n        barFillHeight=Math.round((props.value/props.maxValue)*100)+'%' ;\r\n\r\n    }\r\n    return(\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css'\r\n\r\nconst Chart = props =>{\r\n    const dataPointValues=props.dataPoints.map(dataPoint=> dataPoint.value);\r\n    const totalMaximum=Math.max(...dataPointValues)\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint =><ChartBar \r\n            key={dataPoint.label}\r\n            value={dataPoint.value} \r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label} /> )}\r\n            \r\n        </div>\r\n    );\r\n\r\n\r\n\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) =>{\r\n    const chartDataPoints=[\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'May',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'Jul',value:0},\r\n        {label:'Aug',value:0},\r\n        {label:'Sep',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0}\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth=expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n\r\n    return(\r\n        <Chart dataPoints={chartDataPoints} />\r\n    );\r\n};\r\n\r\nexport default ExpensesChart;","import React , { useState} from 'react';\r\nimport './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from '../Expenses/ExpensesFilter';\r\nimport ExpensesList from '../Expenses/ExpensesList';\r\nimport ExpensesChart from '../Expenses/ExpensesChart';\r\n\r\nfunction Expenses(props){\r\n  const [filteredYear,setFilteredYear]= useState('2020');\r\n  \r\n    const filterChangeHandler = (selectedYear) =>{\r\n      setFilteredYear(selectedYear);\r\n    }\r\n\r\n    const filteredExpenses = props.items.filter(expense =>{\r\n      return expense.date.getFullYear().toString()===filteredYear;\r\n    });\r\n\r\n    \r\n\r\n    return(\r\n\r\n       \r\n        <div>\r\n          <Card className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n\r\n        </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Expenses;","import React, {useState} from 'react';\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle,setEnteredTitle]= useState('');\r\n    const [enteredAmount ,setEnteredAmount]=useState('');\r\n    const [enteredDate , setEnteredDate]=useState('');\r\n\r\n   /*  const[userInput,setUserInput]=useState({\r\n        enteredTitle:'',\r\n        enteredAmount:'',\r\n        enteredDate:''\r\n    }); */\r\n\r\n    const dateChangedHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n       /*  setUserInput({\r\n            ...userInput,\r\n            enteredTitle:event.target.value,\r\n        }); */\r\n        /* setUserInput((prevState)=>{\r\n            return {...prevState,enteredTitle:event.target.value};\r\n\r\n        }); */\r\n        \r\n    }\r\n\r\n    const amountChangedHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        /* setUserInput({\r\n            ...userInput,\r\n            enteredAmount:event.target.value,\r\n        }); */\r\n\r\n    }\r\n    const titleChangedHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        /* setUserInput({\r\n            ...userInput,\r\n            enteredDate:event.target.value,\r\n        }); */\r\n        \r\n    };\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n       \r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n          };\r\n\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        setEnteredTitle('');\r\n\r\n    }\r\n\r\n   \r\n    \r\n    \r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Name</label>\r\n                    <input value={enteredTitle} type=\"text\" onChange={titleChangedHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>ID</label>\r\n                    <input value={enteredAmount} type=\"number\" onChange={amountChangedHandler} min=\"0.01\" step=\"0.01\" />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date of Registration</label>\r\n                    <input value={enteredDate} type=\"date\" onChange={dateChangedHandler} min=\"2018-01-01\" max=\"2022-12-31\" />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Record</button>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseForm;","import React , {useState} from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseFrom from './ExpenseForm'\r\n\r\nconst NewExpense = (props) =>{\r\n\r\n    const [isEditing,setIsEditing]=useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) =>{\r\n        const expenseData={\r\n            ...enteredExpenseData,\r\n            id:Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n\r\n    };\r\n\r\n    const startEditingHandler = () =>{\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stopEditingHandler = () =>{\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return(\r\n        <div className=\"new-expense\">\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Record</button>}\r\n            {isEditing && <ExpenseFrom onCancel={stopEditingHandler} onSaveExpenseData={saveExpenseDataHandler}></ExpenseFrom>}\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NewExpense;","import React , { useState} from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES= [\n  {\n    id: 'e1',\n    title: 'Valen Mascarenhas',\n    amount: 7668,\n    date: new Date(2020, 2, 14),\n  },\n  { id: 'e2', \n  title: 'Risabh Verma', \n  amount: 7913, \n  date: new Date(2021, 1, 17) ,\n},\n  {\n    id: 'e3',\n    title: 'Siddesh Marathe',\n    amount: 4002,\n    date: new Date(2019, 3, 28),\n  },\n  {\n    id: 'e4',\n    title: 'S BarathKumar ',\n    amount: 4503,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\nfunction App() {\n\n  const [expenses,setExpenses] = useState(DUMMY_EXPENSES);\n  \n  const addExpenseHandler = (expense) =>{\n    \n    \n    setExpenses((prevExpenses)=>{\n      return [expense,...expenses];\n    });\n\n  };\n\n\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}